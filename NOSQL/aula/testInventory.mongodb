db.inventory.updateOne(
  { item: "paper" },
  { $set: { "size.uom": "cm", status: "P" } }
);

db.inventory.updateOne(
  {},
  { $set: { "size.uom": "cm", status: "P" } }
);

db.inventory.updateMany(
  { "qty": { $lt: 50 } },
  { $set: { "size.uom": "in", status: "P" } }
);

db.products.update(
  { _id: 100 },
  { $set: {
      quantity: 500,
      details: { model: "14Q3", make: "xyz" },
      tags: [ "coats", "outerwear", "clothing" ]
    }
  }
);

db.products.update(
  { _id: 100 },
  { $set: { "details.make": "zzz" } }
);

db.products.update(
  { _id: 100 },
  { $set: {
      "tags.1": "rain gear",
      "ratings.0.rating": 2
    }
  }
);

db.products.update(
  { _id: 1 },
  { $mul: { price: NumberDecimal("1.25"), qty: 2 } }
);

db.products.update(
  { _id: 2 },
  { $mul: { price: NumberLong("100") } }
);

db.products.update(
  { _id: 3 },
  { $mul: { price: NumberInt(5) } }
);

db.increment.update(
  { sku: "abc123" },
  { $inc: { quantity: -2, "metrics.orders": 1 } }
);

db.scores.update({ _id: 1 }, { $min: { lowScore: 150 } });

db.scores.update({ _id: 1 }, { $min: { lowScore: 250 } })

db.scores.update({ _id: 1 }, { $max: { highScore: 950 } });

db.scores.update({ _id: 1 }, { $max: { highScore: 870 } });

db.tags.update(
  { _id: 1 },
  {
    $min: { dateEntered: new Date("2019-09-25") },
    $max: { dateExpired: new Date("2019-10-02") }
  }
);

db.customers.updateOne(
  { _id: 1 },
  { $currentDate: {
      lastModified: true,
      "cancellation.date": { $type: "timestamp" }
    }, $set: {
      "cancellation.reason": "user request",
      status: "D"
    }
  }
);

db.fruits.updateOne(
  { name: "Banana" },
  { $rename: {
      "name": "productName"
    }
  }
);

db.fruits.updateMany(
  { productName: "Banana" },
  { $unset: { quantity: "" } }
);
