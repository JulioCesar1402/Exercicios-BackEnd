// Exercício 1 : Retorne o documento com o _id igual a 8.

db.bios.find({ _id: 8 })

// Exercício 2 : Retorne o documento com o _id igual a 8, mas só exiba os atributos: _id e name .

db.bios.find({ _id:8 }, { name: 1 })

// Exercício 3 : Retorne apenas os atributos name e birth do documento com o _id igual a 8.

db.bios.find({ _id:8 }, { name: 1, birth: 1, _id: 0 })

// Exercício 4 : Retorne todos os documentos em que o atributo name.first seja igual a John , utilizando o método pretty() .

db.bios.find({ 'name.first': 'John'}).pretty();

// Exercício 5 : Retorne os 3 primeiros documentos da coleção bios utilizando o método pretty() .

db.bios.find().limit(3).pretty();

// Exercício 6 : Retorne 2 documentos da coleção bios pulando os 5 primeiros documentos.

db.bios.find().limit(2).skip(5);

// Utilizando o mongoimport , importe o arquivo books.json para a sua instância local do MongoDB e utilize a coleção books para construir as seguintes consultas:
// Exercício 7 : Retorne a quantidade de documentos da coleção books .

use library;

db.books.count() // 431

// Exercício 8 : Conte quantos livros existem com o status = "PUBLISH" .

db.books.count({
  status: "PUBLISH"
}) // 363

// Exercício 9 : Exiba os atributos title , isbn e pageCount dos 3 primeiros livros. NÃO retorne o atributo _id .

db.books.find({},{
  title: 1, isbn: 1, pageCount: 1, _id: 0
}).limit(3)
// { "title" : "Android in Action, Second Edition", "isbn" : "1935182722", "pageCount" : 592 }
// { "title" : "Flex 3 in Action", "isbn" : "1933988746", "pageCount" : 576 }
// { "title" : "Unlocking Android", "isbn" : "1933988673", "pageCount" : 416 }

// Exercício 10: Pule 5 documentos e exiba os atributos _id , title , authors e status dos livros com o status = "MEAP" , limitando-se a 10 documentos.

db.books.find({ status: "MEAP" }, {
  title: 1, authors: 1, status: 1
}).limit(10).pretty;

// { "_id" : 146, "title" : "Distributed Agile in Action", "status" : "MEAP", "authors" : [ "Vikas Hazrati", "Balaji D Loganathan" ] }
// { "_id" : 165, "title" : "Android in Practice", "status" : "MEAP", "authors" : [ "Matthias Kaeppler", "Michael D. Galpin", "Charlie Collins" ] }
// { "_id" : 175, "title" : "Groovy in Action, Second Edition", "status" : "MEAP", "authors" : [ "Dierk König", "Guillaume Laforge", "Paul King", "Cédric Champeau", "Hamlet D'Arcy", "Erik Pragt", "", "Jon Skeet" ] }
// { "_id" : 189, "title" : "F# in Action", "status" : "MEAP", "authors" : [ "Amanda Laucher" ] }
// { "_id" : 335, "title" : "The Engaging Web", "status" : "MEAP", "authors" : [ "Gabe Zichermann", "Chris Cunningham" ] }
// { "_id" : 550, "title" : "Big Data", "status" : "MEAP", "authors" : [ "Nathan Marz", "James Warren" ] }
// { "_id" : 599, "title" : "Augmented Reality Revealed", "status" : "MEAP", "authors" : [ "Robert A. Rice Jr." ] }
// { "_id" : 562, "title" : "Java Persistence with Hibernate, Second Edition", "status" : "MEAP", "authors" : [ "Christian Bauer", "Gavin King", "", "Gary Gregory" ] }
// { "_id" : 607, "title" : "Building Well-Structured JavaScript Applications", "status" : "MEAP", "authors" : [ "Julio C. Ody" ] }
// { "_id" : 640, "title" : "Functional Programming in Scala", "status" : "MEAP", "authors" : [ "Paul Chiusano", "Rúnar Bjarnason" ] }
